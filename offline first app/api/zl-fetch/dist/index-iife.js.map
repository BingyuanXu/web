{"version":3,"file":"index-iife.js","sources":["../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../src/createRequestOptions.js","../src/handleResponse.js","../src/index.js"],"sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/* global Headers btoa */\nconst setHeaders = ({\n  headers = {},\n  body,\n  method = 'get',\n  auth\n} = {}) => {\n  if (typeof Headers === 'undefined') {\n    require('cross-fetch/polyfill')\n  }\n\n  const h = new Headers(headers)\n\n  // Sets content type to 'application/json' for POST, PUT, PATCH, DELETE requests\n  if (!h.get('content-type') && method !== 'get') {\n    h.set('content-type', 'application/json')\n  }\n\n  if (auth) {\n    // Basic Auth\n    if (typeof auth === 'object') {\n      const { username, password } = auth\n      if (!username) throw new Error('Username required for basic authentication')\n      if (!password) throw new Error('Password required for basic authentication')\n\n      let encode\n      if ('btoa' in window) {\n        encode = btoa\n      } else {\n        encode = require('btoa')\n      }\n\n      h.set('Authorization', 'Basic ' + encode(`${username}:${password}`))\n    } else {\n      // Bearer Auth\n      h.set('Authorization', `Bearer ${auth}`)\n    }\n  }\n\n  return h\n}\n\nconst queryStringify = params => {\n  if (!params) return\n  return Object.entries(params)\n    .reduce((acc, entry, index) => {\n      const [param, value] = entry\n      const encoded = index === 0\n        ? `${param}=${encodeURIComponent(value)}`\n        : `&${param}=${encodeURIComponent(value)}`\n      return `${acc}${encoded}`\n    }, '')\n}\n\n/**\n * Appends queries to URL\n * @param {Object} opts\n */\nconst createURL = opts => {\n  const { url, queries } = opts\n  if (!queries) return url\n  return `${url}?${queryStringify(queries)}`\n}\n\nconst formatBody = opts => {\n  const method = opts.method\n  if (method === 'get') return\n\n  const type = opts.headers.get('content-type')\n  if (!type) return\n\n  if (type.includes('x-www-form-urlencoded')) return queryStringify(opts.body)\n  if (type.includes('json')) return JSON.stringify(opts.body)\n\n  return opts.body\n}\n\n// Defaults to GET method\n// Defaults content type to application/json\n// Creates authorization headers automatically\nexport default (options = {}) => {\n  const opts = Object.assign({}, options)\n\n  opts.url = createURL(opts)\n  opts.method = opts.method || 'get'\n  opts.headers = setHeaders(opts)\n  opts.body = formatBody(opts)\n\n  // Removes options that are not native to Fetch\n  delete opts.auth\n\n  return opts\n}\n","// window.fetch response headers contains entries method.\nconst getBrowserFetchHeaders = response => {\n  const headers = {}\n  for (const [header, value] of response.headers.entries()) {\n    headers[header] = value\n  }\n  return headers\n}\n\n// Node fetch response headers does not contain entries method.\nconst getNodeFetchHeaders = response => {\n  const headers = {}\n  const h = response.headers._headers\n  for (const header in h) {\n    headers[header] = h[header].join('')\n  }\n  return headers\n}\n\nconst getHeaders = response => {\n  return response.headers.entries\n    ? getBrowserFetchHeaders(response)\n    : getNodeFetchHeaders(response)\n}\n\nconst formatOutput = (response, body) => {\n  const headers = getHeaders(response)\n  const returnValue = {\n    body,\n    headers,\n    response,\n    status: response.status,\n    statusText: response.statusText\n  }\n\n  return response.ok\n    ? Promise.resolve(returnValue)\n    : Promise.reject(returnValue)\n}\n\nconst parseResponse = (response, type) => {\n  // Response object can only be used once.\n  // We clone the response object here so users can use it again if they want to.\n  // Checks required because browser support isn't solid.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Response/clone\n\n  const clone = typeof response.clone === 'function'\n    ? response.clone()\n    : undefined\n\n  const passedResponse = clone || response\n\n  // This will do response.json(), response.text(), etc.\n  // We use bracket notation to allow multiple types to be parsed at the same time.\n  return response[type]()\n    .then(body => formatOutput(passedResponse, body))\n}\n\nexport const handleResponse = response => {\n  const type = response.headers.get('content-type')\n  if (type.includes('json')) return parseResponse(response, 'json')\n  if (type.includes('text')) return parseResponse(response, 'text')\n  if (type.includes('image')) return parseResponse(response, 'blob')\n\n  // Need to check for FormData, Blob and ArrayBuffer content types\n  throw new Error(`zlFetch does not support content-type ${type} yet`)\n}\n\n/**\n * Formats all errors into zlFetch style error\n * @param {Object} error - The error object\n */\nexport const handleError = error => {\n  if (error.message === 'Failed to fetch') {\n    /* eslint-disable */\n    return Promise.reject({ error })\n    /* eslint-enable */\n  }\n  return Promise.reject(error)\n}\n","/* globals fetch */\nimport createRequestOptions from './createRequestOptions'\nimport { handleResponse, handleError } from './handleResponse'\n\nif (typeof fetch === 'undefined') {\n  require('cross-fetch/polyfill')\n}\n\nconst zlFetch = (url, options) => {\n  const opts = createRequestOptions(Object.assign({ url }, options))\n  return fetch(opts.url, opts)\n    .then(handleResponse)\n    .catch(handleError)\n}\n\n// ========================\n// Shorthands\n// ========================\nconst methods = ['get', 'post', 'put', 'patch', 'delete']\n\nfor (const method of methods) {\n  zlFetch[method] = function (url, options) {\n    options = Object.assign({ method }, options)\n    return zlFetch(url, options)\n  }\n}\n\nexport default zlFetch\n"],"names":["arr","Array","isArray","i","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_typeof","obj","module","constructor","setHeaders","headers","body","method","auth","Headers","require","h","get","set","encode","username","password","Error","window","btoa","queryStringify","params","entries","reduce","acc","entry","index","param","encoded","encodeURIComponent","createURL","opts","url","queries","formatBody","type","includes","JSON","stringify","getHeaders","response","header","getBrowserFetchHeaders","_headers","join","getNodeFetchHeaders","parseResponse","passedResponse","clone","then","returnValue","status","statusText","ok","Promise","resolve","reject","formatOutput","handleResponse","handleError","error","message","fetch","zlFetch","options","assign","createRequestOptions"],"mappings":"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"}